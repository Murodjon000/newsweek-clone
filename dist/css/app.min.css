/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

/**
        * Work around a Firefox/IE bug where the transparent `button` background
        * results in a loss of the default `button` focus styles.
        */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
        * 1. Use the user's configured `sans` font-family (with Tailwind's default
        *    sans-serif font stack as a fallback) as a sane default.
        * 2. Use Tailwind's default "normal" line-height so the user isn't forced
        *    to override it to ensure consistency even when using the default theme.
        */
html {
  font-family: inter;
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
        * Inherit font-family and line-height from `html` so users can set them as
        * a class directly on the `html` element.
        */
body {
  font-family: inherit;
  line-height: inherit;
  margin: 0;
  min-height: 100vh;
}

/**
        * 1. Prevent padding and border from affecting element width.
        *
        *    We used to set this in the html element and inherit from
        *    the parent element for everything else. This caused issues
        *    in shadow-dom-enhanced elements like <details> where the content
        *    is wrapped by a div with box-sizing set to `content-box`.
        *
        *    https://github.com/mozdevs/cssremedy/issues/4
        *
        *
        * 2. Allow adding a border to an element by just adding a border-width.
        *
        *    By default, the way the browser specifies that an element should have no
        *    border is by setting it's border-style to `none` in the user-agent
        *    stylesheet.
        *
        *    In order to easily add borders to elements by just setting the `border-width`
        *    property, we change the default border-style for all elements to `solid`, and
        *    use border-width to hide them instead. This way our `border` utilities only
        *    need to set the `border-width` property instead of the entire `border`
        *    shorthand, making our border utilities much more straightforward to compose.
        *
        *    https://github.com/tailwindcss/tailwindcss/pull/116
        */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #d4d4d8;
  /* 2 */
}

/*
        * Ensure horizontal rules are visible by default
        */
hr {
  border-top-width: 1px;
  border-color: #d4d4d8;
}

/**
        * Undo the `border-style: none` reset that Normalize applies to images so that
        * our `border-{width}` utilities have the expected effect.
        *
        * The Normalize reset is unnecessary for us since we default the border-width
        * to 0 on all elements.
        *
        * https://github.com/tailwindcss/tailwindcss/issues/362
        */
img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #a1a1aa;
}

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #a1a1aa;
}

input::-ms-input-placeholder,
textarea::-ms-input-placeholder {
  color: #a1a1aa;
}

input::placeholder,
textarea::placeholder {
  color: #a1a1aa;
}

button,
[role="button"],
input[type="submit"] {
  cursor: pointer;
  font-family: var(--font-family-default);
  -webkit-transition: all 150ms ease-in-out;
  transition: all 150ms ease-in-out;
}

button:focus:not([data-focus-visible-added]) {
  outline: none;
}

button:disabled,
button[disabled],
[role="button"]:disabled,
[role="button"][disabled],
input:disabled,
input[disabled] {
  opacity: 0.5;
  cursor: default;
  pointer-events: none;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
        * Reset links to optimize for opt-in styling instead of
        * opt-out.
        */
a {
  text-decoration: inherit;
  color: inherit;
}

/**
        * Reset form element properties that are easy to forget to
        * style explicitly so you don't inadvertently introduce
        * styles that deviate from your design system. These styles
        * supplement a partial reset that is already applied by
        * normalize.css.
        */
button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

input,
textarea {
  font-family: inter;
  /* 1 */
}

/**
        * Use the configured 'mono' font family for elements that
        * are expected to be rendered with a monospace font, falling
        * back to the system monospace stack if there is no configured
        * 'mono' font family.
        */
pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
}

/**
        * Make replaced elements `display: block` by default as that's
        * the behavior you want almost all of the time. Inspired by
        * CSS Remedy, with `svg` added as well.
        *
        * https://github.com/mozdevs/cssremedy/issues/14
        */
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
}

/**
        * Constrain images and videos to the parent width and preserve
        * their instrinsic aspect ratio.
        *
        * https://github.com/mozdevs/cssremedy/issues/14
        */
img,
video {
  max-width: 100%;
  height: auto;
}

.bg-primary-red {
  background-color: #f72210;
}

.background-yellow {
  background-color: #ffe400;
}

.bg-graylighter {
  background-color: #f4f5f6;
}

.line__deco::before {
  content: "";
  position: absolute;
  display: block;
  background-color: #d9d9d9;
  height: 1px;
  left: 0;
  right: 0;
  top: 52%;
}

.line__deco::after {
  content: "";
  position: absolute;
  display: block;
  background-color: #d9d9d9;
  height: 1px;
  left: 0;
  right: 0;
  top: 51%;
}

.vs-text {
  position: relative;
  margin-bottom: -8px;
  z-index: 1;
  width: 32px;
  height: 32px;
  color: #d6d6d6;
  border-radius: 50%;
  text-align: center;
}

.info_card {
  border: 1px solid #e6e6e6;
}

.op__image {
  width: 100%;
}

.bottom__tag {
  margin-top: -30px;
}

.bottom__tag > a {
  display: inline-block;
  background-color: #c2d4d7;
  text-decoration: none;
}

.card-box {
  background-color: rgba(255, 255, 255, 0.9);
  padding: 2px 10px;
  color: #f72210;
  font-weight: bold;
}

.card-box.card-box-secondary {
  color: #3581f4;
}

.card-box.card-box-primary {
  background-color: #f72210;
  color: #fff;
}

.input-box {
  border: 1px solid transparent;
  outline: none;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
  width: 100%;
}

.search-input {
  top: 20%;
  right: 0;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
  width: 100px;
}

.search-icon {
  top: 0;
  bottom: 0;
  right: 0;
  margin-right: 12px;
}

.bottom-left {
  bottom: 0;
  left: 0;
}

.after {
  font-weight: 700;
}

body {
  background-color: #f4f5f6;
}

.nav-1 {
  min-height: 50px;
}

.nav-2 {
  min-height: 95px;
}

.icon {
  font-size: 1.1rem;
  color: #f2f2f2;
}

.sub__button {
  background-color: #ffe400;
  border-radius: 24px;
  font-weight: 900;
}

svg {
  fill: white;
}

.search > a {
  font-size: 0.9rem;
  text-decoration: none;
  color: rgba(0, 0, 0, 0.55);
}

.search > i {
  font-size: 1rem;
}

.bottom2 > a {
  font-size: 16px;
  line-height: 24px;
  color: #a1a1aa;
  text-decoration: none;
  font-weight: 500;
}

.header__bottom > a:hover {
  color: #f72210;
}

.header__bottom > span {
  color: #e5e7eb;
}

.bottom2 {
  background-color: white;
  border-bottom: 1px solid #d4d4d8;
}

.bottom2 > a:hover {
  color: #f72210;
}

.header-box {
  padding-top: 10px;
  padding-bottom: 10px;
}

.header-box > * + * {
  border-left: 1px solid #d4d4d8;
}

.header-link {
  color: black;
  font-size: 18px;
  font-weight: 700;
  line-height: 25px;
  cursor: pointer;
}

.header-link:hover {
  text-decoration: none;
  color: #f72210;
}

.header__container {
  padding-right: 150px;
}

.header__container::before {
  position: absolute;
  top: 0;
  right: 0;
  content: "";
  display: block;
  width: 58px;
  background-color: #f72210;
  border-left: 12px solid white;
  border-top: 13px solid #f72210;
}

@media only screen and (min-width: 1325px) {
  .main-wrapper {
    max-width: 1300px;
    margin: 0 auto;
  }
}

.debate-card {
  border-top: 4px solid #d9d9d9;
  border-bottom: 4px solid #d9d9d9;
}

.custom-img {
  width: 100%;
  height: auto;
}

.signup-img {
  width: 30px;
  height: 30px;
}

.signup-btn {
  border: 0;
  width: 100%;
}

.left-50 {
  left: 50%;
}

.section {
  border-top: 1px solid #d9d9d9;
  padding: 16px 0;
}

.section-title {
  font-size: 22px;
  font-weight: 700;
  color: #f72210;
  text-transform: uppercase;
}

.footer-links {
  font-size: 14px;
  color: #807f84;
  padding: 0 8px;
  margin: 4px 0;
}

.footer-links:hover {
  color: black;
  text-decoration: none;
}

.left {
  margin-left: -8px;
}

@media (min-width: 768px) {
  .footer-links:not(:first-of-type) {
    border-left: 1px solid #d9d9d9;
  }
}

@media only screen and (max-width: 768px) {
  .sm\:mt-3 {
    margin-top: 1rem;
  }
}

.h-news {
  height: 371px;
}

.mb-new {
  margin-bottom: 1.4rem;
}

@media only screen and (max-width: 768px) {
  .sm\:none {
    display: none;
  }
}

@media only screen and (min-width: 768px) {
  .md\:none {
    display: none;
  }
}

.text-xs {
  font-size: 13px;
}

.text-sm {
  font-size: 12px;
}

.text-lg {
  font-size: 22px;
  font-weight: bold;
  line-height: 22px;
}

.text-n {
  font-size: 17px;
  font-weight: bold;
  line-height: 20px;
}

.text-gray {
  color: rgba(3, 3, 3, 0.5);
}

.text-graylight {
  color: #807f84;
}

.color__blue {
  text-decoration: none;
  color: #3581f4;
}

.color__red {
  color: #f72210;
}

.currentColor {
  fill: #f72210;
}

.underline-primary:hover {
  text-decoration: underline;
  -webkit-text-decoration-color: #f72210;
  text-decoration-color: #f72210;
}

body {
  font-family: "Roboto Condensed", sans-serif;
}

.card_header {
  color: #a1a1aa;
}

.image_container {
  position: relative;
}

.category > span {
  position: absolute;
  bottom: 0;
  left: 0;
  padding: 8px 15px 9px;
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 1;
  text-decoration: none;
  cursor: pointer;
}

p {
  margin: 0;
}

.card_1 p {
  font-size: 12px;
}

.anchor_text {
  font-size: 1.2rem;
}

.card_1 .anchor_text {
  text-decoration: none;
  color: black;
}

.card_1 .anchor_text:hover {
  text-decoration: underline;
  -webkit-text-decoration-color: #f72210;
  text-decoration-color: #f72210;
}

hr {
  border-color: #f4f5f7;
}

a:hover {
  color: black;
  text-decoration: none;
}

.none-border {
  border: 0;
}

.none-radius {
  border-radius: 0;
}

.sticky {
  position: -webkit-sticky;
  position: sticky;
  top: 60px;
}
/*# sourceMappingURL=app.min.css.map */
